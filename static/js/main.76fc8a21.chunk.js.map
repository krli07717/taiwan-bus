{"version":3,"sources":["assets/icon-location.svg","assets/icon-search.svg","assets/logo.svg","assets/logo-zh.svg","components/Logo.js","pages/Homepage.js","components/Keyboard.js","components/RouteList.js","utils/fetchTdxApi.js","pages/SearchBusPage.js","assets/icon-back.svg","components/BackButton.js","pages/BusStatusPage.js","utils/getGeolocation.js","pages/NearbyBusPage.js","pages/RoutesByStationPage.js","App.js","index.js"],"names":["LogoZh","className","to","src","logoZhSvg","alt","Logo","logoSvg","Nav","locationSvg","searchSvg","Footer","href","target","rel","Homepage","CityKey","city_zh","city_en","handleChooseCity","htmlFor","type","name","id","onChange","hidden","CityKeyboard","handleSubmitCity","submitCity","onSubmit","map","RouteItem","routeInfo","city","RouteUID","DepartureStopNameZh","DestinationStopNameZh","RouteName","fromTo","RouteList","routesList","routes","noRoutes","length","getRequestHeader","GMTString","Date","toGMTString","ShaObj","jsSHA","setHMACKey","process","update","Authorization","getHMAC","fetchTdxApi","url","a","fetch","headers","response","json","data","SearchInput","value","disabled","placeholder","SearchBusPage","useState","setCity","keyword","setKeyword","fetchingRoutes","setFetchingRoutes","setRoutes","allRoutesRef","useRef","useEffect","current","fetchCityRoute","makeRoutes","Zh_tw","filteredRoutes","filter","includes","e","dataset","preventDefault","BackButton","backSvg","onClick","window","history","go","Stop","stopInfo","stopName","plateNumb","estimatedSeconds","stopStatus","undefined","statusStyle","Math","floor","StopStatus","stopUID","BusStatusPage","useParams","stopsToStatus","setStopsToStatus","stopsFromStatus","setStopsFromStatus","showFromStatus","setShowFromStatus","lastFetchSeconds","setLastFetchSeconds","handleChooseDirection","fetchArrivalTime","getStopsStatus","estimatedTimeUrl","stopOfRouteUrl","direction","stops","find","Direction","Stops","stop","estimatedTimes","StopUID","PlateNumb","EstimateTime","StopName","index","originalArray","findIndex","stopDuplicate","Promise","allSettled","stopsDirectionToStatus","stopsDirectionFromStatus","fetchBusInterval","setInterval","countDownInterval","second","clearInterval","toDestinationName","fromDestinationName","checked","asyncGetGeolocation","options","enableHighAccuracy","timeout","maximumAge","resolve","reject","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","error","NearbyStationItem","nearbyStationInfo","userLocation","nearbyStationName","possibleRoutes","possibleRouteNames","routeName","join","encodeURIComponent","state","NearbyStationList","nearbyStations","stationList","NearbyBusPage","setUserLocation","setNearbyStations","unmounted","lat","lng","getUserLocation","nearbyStationUrl","nearbyStationRaw","station","routeUID","StationName","stationDuplicate","getNearbyStations","PossibleRouteItem","possibleRouteInfo","destinationName","PossibleRouteList","RoutesByStationPage","props","useLocation","setPossibleRoutes","nearbyRouteUrl","nearbyRouteRaw","nearbyRoutesWithDestinations","possibleRoute","nearbyRoute","route","City","routeDuplicate","getRoutesDestinations","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.76fc8a21.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/icon-location.e4f566a1.svg\";","export default __webpack_public_path__ + \"static/media/icon-search.f23fbc2c.svg\";","export default __webpack_public_path__ + \"static/media/logo.34be31bd.svg\";","export default __webpack_public_path__ + \"static/media/logo-zh.cba7fb6c.svg\";","import \"./Logo.css\";\nimport { Link } from \"react-router-dom\";\nimport logoSvg from \"../assets/logo.svg\";\nimport logoZhSvg from \"../assets/logo-zh.svg\";\n\nexport function LogoZh() {\n  return (\n    <h1 className=\"logo\">\n      <Link to=\"/\">\n        <img src={logoZhSvg} alt=\"Taiwan Bus Logo\" />\n      </Link>\n    </h1>\n  );\n}\nexport function Logo() {\n  return (\n    <h1 className=\"logo\">\n      <Link to=\"/\">\n        <img src={logoSvg} alt=\"Taiwan Bus Logo\" />\n      </Link>\n    </h1>\n  );\n}\n","import \"./Homepage.css\";\nimport { Link } from \"react-router-dom\";\nimport locationSvg from \"../assets/icon-location.svg\";\nimport searchSvg from \"../assets/icon-search.svg\";\nimport { Logo } from \"../components/Logo\";\n\nfunction Nav() {\n  return (\n    <nav>\n      <Link to=\"/nearby-bus\" className=\"button_heavy\">\n        <img src={locationSvg} alt=\"location icon\" />\n        附近公車站\n      </Link>\n      <Link to=\"/search-bus\" className=\"button_heavy\">\n        <img src={searchSvg} alt=\"search icon\" />\n        查詢公車\n      </Link>\n      <Link to=\"/search-train\" className=\"button_heavy\">\n        <img src={searchSvg} alt=\"search icon\" />\n        查詢客運\n      </Link>\n    </nav>\n  );\n}\n\nfunction Footer() {\n  return (\n    <footer>\n      Taiwan Bus &copy;{\" \"}\n      <a\n        href=\"https://github.com/krli07717/taiwan-bus\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        Code\n      </a>{\" \"}\n      / Design: KT\n    </footer>\n  );\n}\n\nexport default function Homepage() {\n  return (\n    <div className=\"homepage\">\n      <Logo />\n      <Nav />\n      <Footer />\n    </div>\n  );\n}\n","import \"./Keyboard.css\";\n\nfunction CityKey({ city_zh, city_en, handleChooseCity }) {\n  return (\n    <label htmlFor={city_en}>\n      <input\n        type=\"radio\"\n        name=\"city\"\n        id={city_en}\n        data-city_zh={city_zh}\n        onChange={handleChooseCity}\n        hidden\n      />\n      <span className=\"button_heavy\">{city_zh}</span>\n    </label>\n  );\n}\n\nexport function CityKeyboard({ handleChooseCity, handleSubmitCity }) {\n  const cities = [\n    {\n      city_zh: \"臺北市\",\n      city_en: \"Taipei\",\n    },\n    {\n      city_zh: \"新北市\",\n      city_en: \"NewTaipei\",\n    },\n    {\n      city_zh: \"桃園市\",\n      city_en: \"Taoyuan\",\n    },\n    {\n      city_zh: \"臺中市\",\n      city_en: \"Taichung\",\n    },\n    {\n      city_zh: \"臺南市\",\n      city_en: \"Tainan\",\n    },\n    {\n      city_zh: \"高雄市\",\n      city_en: \"Kaohsiung\",\n    },\n    {\n      city_zh: \"基隆市\",\n      city_en: \"Keelung\",\n    },\n    {\n      city_zh: \"新竹市\",\n      city_en: \"Hsinchu\",\n    },\n    {\n      city_zh: \"新竹縣\",\n      city_en: \"HsinchuCounty\",\n    },\n    {\n      city_zh: \"苗栗縣\",\n      city_en: \"MiaoliCounty\",\n    },\n    {\n      city_zh: \"彰化縣\",\n      city_en: \"ChanghuaCounty\",\n    },\n    {\n      city_zh: \"南投縣\",\n      city_en: \"NantouCounty\",\n    },\n    {\n      city_zh: \"雲林縣\",\n      city_en: \"YunlinCounty\",\n    },\n    {\n      city_zh: \"嘉義縣\",\n      city_en: \"ChiayiCounty\",\n    },\n    {\n      city_zh: \"嘉義市\",\n      city_en: \"Chiayi\",\n    },\n    {\n      city_zh: \"屏東縣\",\n      city_en: \"PingtungCounty\",\n    },\n    {\n      city_zh: \"宜蘭縣\",\n      city_en: \"YilanCounty\",\n    },\n    {\n      city_zh: \"花蓮縣\",\n      city_en: \"HualienCounty\",\n    },\n    {\n      city_zh: \"臺東縣\",\n      city_en: \"TaitungCounty\",\n    },\n    {\n      city_zh: \"金門縣\",\n      city_en: \"KinmenCounty\",\n    },\n    {\n      city_zh: \"澎湖縣\",\n      city_en: \"PenghuCounty\",\n    },\n    {\n      city_zh: \"連江縣\",\n      city_en: \"LienchiangCounty\",\n    },\n  ];\n\n  const submitCity = (\n    <label htmlFor=\"set_city\">\n      <input type=\"submit\" id=\"set_city\" hidden />\n      <span className=\"button_heavy\">設定</span>\n    </label>\n  );\n\n  return (\n    <form className=\"city_keyboard\" onSubmit={handleSubmitCity}>\n      {cities.map(({ city_zh, city_en }) => (\n        <CityKey\n          key={city_zh}\n          city_zh={city_zh}\n          city_en={city_en}\n          handleChooseCity={handleChooseCity}\n        />\n      ))}\n      {submitCity}\n    </form>\n  );\n}\n","import \"./RouteList.css\";\nimport { Link } from \"react-router-dom\";\n\nexport function RouteItem({ routeInfo, city }) {\n  const { RouteUID, DepartureStopNameZh, DestinationStopNameZh, RouteName } =\n    routeInfo;\n  const fromTo =\n    DepartureStopNameZh && DestinationStopNameZh ? (\n      <p className=\"route_fromTo\">\n        {DepartureStopNameZh}\n        <span>&nbsp;&nbsp;往&nbsp;&nbsp;</span>\n        {DestinationStopNameZh}\n      </p>\n    ) : null;\n  return (\n    <Link to={`${city[0]}/${RouteUID}`} className=\"route\">\n      <span className=\"route_name\">{RouteName}</span>\n      {fromTo}\n    </Link>\n  );\n}\n\nexport default function RouteList({ city, routes }) {\n  const routesList = routes.map((routeInfo) => (\n    <RouteItem routeInfo={routeInfo} key={routeInfo.RouteUID} city={city} />\n  ));\n  const noRoutes = <span className=\"no_routes\">沒有符合路線</span>;\n  return (\n    <div className=\"routes\">\n      <h2 className=\"routes_city\">{city[1]}</h2>\n      <div className=\"routes_list\">\n        {routesList.length ? routesList : noRoutes}\n      </div>\n    </div>\n  );\n}\n","import jsSHA from \"jssha/dist/sha1\";\n\nfunction getRequestHeader() {\n  const APP_ID = process.env.REACT_APP_APP_ID;\n  const APP_KEY = process.env.REACT_APP_APP_KEY;\n\n  const GMTString = new Date().toGMTString();\n  const ShaObj = new jsSHA(\"SHA-1\", \"TEXT\");\n  ShaObj.setHMACKey(APP_KEY, \"TEXT\");\n  ShaObj.update(\"x-date: \" + GMTString);\n  const HMAC = ShaObj.getHMAC(\"B64\");\n  const Authorization =\n    'hmac username=\"' +\n    APP_ID +\n    '\", algorithm=\"hmac-sha1\", headers=\"x-date\", signature=\"' +\n    HMAC +\n    '\"';\n\n  return {\n    Authorization: Authorization,\n    \"X-Date\": GMTString /*,'Accept-Encoding': 'gzip'*/,\n  }; //如果要將js運行在伺服器，可額外加入 'Accept-Encoding': 'gzip'，要求壓縮以減少網路傳輸資料量\n}\n\nexport default async function fetchTdxApi(url) {\n  try {\n    const response = await fetch(url, { headers: getRequestHeader() });\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n","import \"./SearchBusPage.css\";\nimport { LogoZh } from \"../components/Logo\";\nimport { useState, useEffect, useRef } from \"react\";\nimport { CityKeyboard } from \"../components/Keyboard\";\nimport RouteList from \"../components/RouteList\";\nimport fetchTdxApi from \"../utils/fetchTdxApi\";\n\nfunction SearchInput({ value, onChange, disabled }) {\n  return (\n    <input\n      type=\"search\"\n      value={value}\n      placeholder=\"輸入路線關鍵字\"\n      onChange={onChange}\n      disabled={disabled}\n    />\n  );\n}\n\nexport default function SearchBusPage() {\n  const [city, setCity] = useState([]);\n  const [keyword, setKeyword] = useState(\"\");\n  const [fetchingRoutes, setFetchingRoutes] = useState(false);\n  const [routes, setRoutes] = useState([]);\n  const allRoutesRef = useRef([]);\n\n  function handleChooseCity(e) {\n    setCity([e.target.id, e.target.dataset.city_zh]);\n  }\n\n  function handleSubmitCity(e) {\n    e.preventDefault();\n    if (!city.length) return;\n    setFetchingRoutes(true);\n  }\n\n  function handleKeywordChange(e) {\n    setKeyword(e.target.value);\n  }\n\n  //   fetch city routes\n  useEffect(() => {\n    if (allRoutesRef.current.length > 0) return;\n    if (!city.length) return;\n    const cityRouteUrl = `https://ptx.transportdata.tw/MOTC/v2/Bus/Route/City/${city[0]}?$format=JSON`;\n    function makeRoutes(data) {\n      return data.map(\n        ({\n          RouteUID,\n          DepartureStopNameZh,\n          DestinationStopNameZh,\n          RouteName,\n        }) => {\n          return {\n            RouteUID,\n            DepartureStopNameZh,\n            DestinationStopNameZh,\n            RouteName: RouteName.Zh_tw,\n          };\n        }\n      );\n    }\n    async function fetchCityRoute(url) {\n      try {\n        const data = await fetchTdxApi(url);\n        const routes = makeRoutes(data);\n        allRoutesRef.current = routes;\n        setRoutes(routes);\n      } catch (error) {\n        throw error;\n      }\n    }\n    fetchCityRoute(cityRouteUrl);\n  }, [fetchingRoutes]);\n\n  //   filtered routes by search keyword\n  useEffect(() => {\n    const filteredRoutes = allRoutesRef.current.filter(({ RouteName }) =>\n      RouteName.includes(keyword)\n    );\n    setRoutes(filteredRoutes);\n  }, [keyword]);\n\n  return (\n    <div className=\"search_bus_page\">\n      <div className=\"top_nav\">\n        <LogoZh />\n        <SearchInput\n          value={keyword}\n          onChange={handleKeywordChange}\n          disabled={allRoutesRef.current.length === 0}\n        />\n      </div>\n      {allRoutesRef.current.length === 0 ? (\n        <CityKeyboard\n          handleChooseCity={handleChooseCity}\n          handleSubmitCity={handleSubmitCity}\n        />\n      ) : (\n        <RouteList city={city} routes={routes} />\n      )}\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/icon-back.d842da2e.svg\";","import backSvg from \"../assets/icon-back.svg\";\nfunction BackButton() {\n  return (\n    <img\n      src={backSvg}\n      alt=\"back icon\"\n      className=\"back_page\"\n      onClick={() => {\n        window.history.go(-1);\n      }}\n    />\n  );\n}\n\nexport default BackButton;\n","import \"./BusStatusPage.css\";\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport fetchTdxApi from \"../utils/fetchTdxApi\";\nimport { LogoZh } from \"../components/Logo\";\nimport BackButton from \"../components/BackButton\";\n\nfunction Stop({ stopInfo }) {\n  const { stopName, plateNumb, estimatedSeconds, stopStatus } = stopInfo;\n\n  function getMinute() {\n    if (stopStatus === 4)\n      return <span className=\"estimated_time off\">未營運</span>;\n    if (stopStatus === 3)\n      return <span className=\"estimated_time off\">末班已過</span>;\n    if (stopStatus === 2)\n      return <span className=\"estimated_time off\">交管不停</span>;\n    if (stopStatus === 1 || stopStatus === undefined)\n      return <span className=\"estimated_time off\">未發車</span>;\n    if (estimatedSeconds < 120)\n      return <span className=\"estimated_time approaching\">進站中</span>;\n    return (\n      <span className=\"estimated_time\">\n        <span className=\"minute\">{Math.floor(estimatedSeconds / 60)}</span>\n        &nbsp;分\n      </span>\n    );\n  }\n\n  function statusStyle(estimatedSeconds) {\n    if (estimatedSeconds === undefined) return \"off\";\n    if (estimatedSeconds < 120) return \"approaching\";\n    return \"\";\n  }\n\n  return (\n    <div className={`stop ${statusStyle(estimatedSeconds)}`}>\n      {getMinute()}\n      <span className=\"stop_name\">{stopName}</span>\n      <span className=\"plate_numb\">{plateNumb}</span>\n      <span className=\"circle\">\n        <span className=\"inner\"></span>\n      </span>\n    </div>\n  );\n}\n\nfunction StopStatus({ stopStatus }) {\n  return stopStatus.map((stopInfo) => (\n    <Stop key={stopInfo.stopUID} stopInfo={stopInfo} />\n  ));\n}\n\nexport default function BusStatusPage() {\n  const { city, RouteUID } = useParams();\n  const [stopsToStatus, setStopsToStatus] = useState([]);\n  const [stopsFromStatus, setStopsFromStatus] = useState([]);\n  const [showFromStatus, setShowFromStatus] = useState(false);\n  const [lastFetchSeconds, setLastFetchSeconds] = useState(0);\n\n  function handleChooseDirection(e) {\n    if (showFromStatus === false && e.target.id === \"from\")\n      setShowFromStatus(true);\n    if (showFromStatus === true && e.target.id === \"to\")\n      setShowFromStatus(false);\n  }\n\n  useEffect(() => {\n    async function fetchArrivalTime() {\n      const estimatedTimeUrl = `https://ptx.transportdata.tw/MOTC/v2/Bus/EstimatedTimeOfArrival/City/${city}?$filter=RouteUID%20eq%20'${RouteUID}'&$format=JSON`;\n      const stopOfRouteUrl = `https://ptx.transportdata.tw/MOTC/v2/Bus/StopOfRoute/City/${city}?$filter=RouteUID%20eq%20'${RouteUID}'&$top=30&$format=JSON`;\n      try {\n        const [{ value: stops }, { value: estimatedTimes }] =\n          await Promise.allSettled([\n            fetchTdxApi(stopOfRouteUrl),\n            fetchTdxApi(estimatedTimeUrl),\n          ]);\n\n        function getStopsStatus(direction) {\n          return stops\n            .find(({ Direction }) => Direction === direction)\n            ?.Stops.map((stop) => {\n              const { PlateNumb, EstimateTime, StopStatus } =\n                estimatedTimes.find(\n                  ({ Direction, StopUID }) =>\n                    Direction === direction && StopUID === stop.StopUID\n                ) ?? {};\n              return {\n                stopUID: stop.StopUID,\n                stopName: stop.StopName.Zh_tw,\n                stopStatus: StopStatus,\n                plateNumb: PlateNumb,\n                estimatedSeconds: EstimateTime,\n              };\n            })\n            .filter(\n              (stop, index, originalArray) =>\n                index ===\n                originalArray.findIndex(\n                  (stopDuplicate) => stop.stopUID === stopDuplicate.stopUID\n                )\n            );\n        }\n\n        const stopsDirectionToStatus = getStopsStatus(0) ?? []; //沒有去程\n        const stopsDirectionFromStatus = getStopsStatus(1) ?? []; //沒有返程\n        setStopsToStatus(stopsDirectionToStatus);\n        setStopsFromStatus(stopsDirectionFromStatus);\n        setLastFetchSeconds(0);\n      } catch (error) {\n        throw error;\n      }\n    }\n\n    const fetchBusInterval = setInterval(fetchArrivalTime, 60000);\n    fetchArrivalTime();\n\n    const countDownInterval = setInterval(() => {\n      setLastFetchSeconds((second) => ++second);\n    }, 1000);\n\n    return () => {\n      clearInterval(fetchBusInterval);\n      clearInterval(countDownInterval);\n    };\n  }, []);\n\n  const toDestinationName = stopsToStatus.length ? (\n    <span className=\"direction\">\n      <span>往&nbsp;</span>\n      {stopsToStatus[stopsToStatus.length - 1].stopName}\n    </span>\n  ) : (\n    <span className=\"direction no_route\">沒有去程</span>\n  );\n  const fromDestinationName = stopsFromStatus.length ? (\n    <span className=\"direction\">\n      <span>往&nbsp;</span>\n      {stopsFromStatus[stopsFromStatus.length - 1].stopName}\n    </span>\n  ) : (\n    <span className=\"direction no_route\">沒有返程</span>\n  );\n\n  return (\n    <div className=\"bus_status_page\">\n      <div className=\"top_nav\">\n        <BackButton />\n        <LogoZh />\n      </div>\n      <div className=\"choose_direction\">\n        <label htmlFor=\"to\">\n          <input\n            type=\"radio\"\n            name=\"direction\"\n            id=\"to\"\n            checked={!showFromStatus}\n            disabled={stopsToStatus.length === 0}\n            onChange={handleChooseDirection}\n            hidden\n          />\n          {toDestinationName}\n        </label>\n        <label htmlFor=\"from\">\n          <input\n            type=\"radio\"\n            name=\"direction\"\n            id=\"from\"\n            checked={showFromStatus}\n            disabled={stopsFromStatus.length === 0}\n            onChange={handleChooseDirection}\n            hidden\n          />\n          {fromDestinationName}\n        </label>\n      </div>\n      <div className=\"status_list\">\n        <span className=\"update_time\">*於\b{lastFetchSeconds}秒前更新</span>\n        <div className=\"stops\">\n          <StopStatus\n            stopStatus={showFromStatus ? stopsFromStatus : stopsToStatus}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n","const asyncGetGeolocation = (\n  options = { enableHighAccuracy: true, timeout: 5000, maximumAge: 0 }\n) => {\n  return new Promise((resolve, reject) => {\n    function onResolve(data) {\n      resolve([data.coords.latitude, data.coords.longitude]);\n    }\n    function onReject(error) {\n      reject(error);\n    }\n    navigator.geolocation.getCurrentPosition(onResolve, onReject, options);\n  });\n};\n\nexport default asyncGetGeolocation;\n","import { useState, useEffect } from \"react\";\nimport { LogoZh } from \"../components/Logo\";\nimport { Link } from \"react-router-dom\";\nimport \"./NearbyBusPage.css\";\nimport fetchTdxApi from \"../utils/fetchTdxApi\";\nimport asyncGetGeolocation from \"../utils/getGeolocation\";\n\nfunction NearbyStationItem({ nearbyStationInfo, userLocation }) {\n  const { nearbyStationName, possibleRoutes } = nearbyStationInfo;\n  const possibleRouteNames = possibleRoutes\n    .map(({ routeName }) => routeName)\n    .join(\", \");\n  return (\n    <Link\n      to={encodeURIComponent(nearbyStationName)}\n      className=\"route\"\n      state={{ possibleRoutes, userLocation }}\n    >\n      <span className=\"route_name\">{nearbyStationName}</span>\n      {possibleRouteNames}\n    </Link>\n  );\n}\n\nfunction NearbyStationList({ nearbyStations, userLocation }) {\n  const stationList = nearbyStations.map((nearbyStationInfo) => (\n    <NearbyStationItem\n      nearbyStationInfo={nearbyStationInfo}\n      userLocation={userLocation}\n      key={nearbyStationInfo.nearbyStationName}\n    />\n  ));\n  return (\n    <div className=\"routes\">\n      <div className=\"routes_list\">\n        {stationList.length ? stationList : null}\n      </div>\n    </div>\n  );\n}\n\nexport default function NearbyBusPage({ userLocation, setUserLocation }) {\n  const [nearbyStations, setNearbyStations] = useState([]);\n\n  useEffect(() => {\n    let unmounted = false;\n    async function getUserLocation() {\n      try {\n        const [lat, lng] = await asyncGetGeolocation();\n        if (!unmounted) setUserLocation([lat, lng]);\n      } catch (error) {\n        throw error;\n      }\n    }\n    if (!userLocation.length) getUserLocation();\n    return () => (unmounted = true);\n  }, []);\n\n  useEffect(() => {\n    async function getNearbyStations() {\n      try {\n        const nearbyStationUrl = `https://ptx.transportdata.tw/MOTC/v2/Bus/Station/NearBy?$spatialFilter=nearby(${userLocation[0]},${userLocation[1]},500)&$format=JSON`;\n        const nearbyStationRaw = await fetchTdxApi(nearbyStationUrl);\n        const nearbyStations = nearbyStationRaw\n          .map((station) => {\n            const possibleRoutes = station.Stops.map((stop) => {\n              return {\n                routeUID: stop.RouteUID,\n                routeName: stop.RouteName.Zh_tw,\n              };\n            });\n            return {\n              nearbyStationName: station.StationName.Zh_tw,\n              possibleRoutes: possibleRoutes,\n            };\n          })\n          .filter(\n            (station, index, originalArray) =>\n              index ===\n              originalArray.findIndex(\n                (stationDuplicate) =>\n                  station.nearbyStationName ===\n                  stationDuplicate.nearbyStationName\n              )\n          );\n        setNearbyStations(nearbyStations);\n      } catch (error) {\n        throw error;\n      }\n    }\n    if (userLocation.length) getNearbyStations();\n  }, [userLocation]);\n\n  return (\n    <div className=\"nearby_bus_page\">\n      <div className=\"top_nav\">\n        <LogoZh />\n        <span className=\"nearby\">我的附近</span>\n      </div>\n      {userLocation.length ? (\n        <NearbyStationList\n          nearbyStations={nearbyStations}\n          userLocation={userLocation}\n        />\n      ) : (\n        <div className=\"routes\">\n          <p className=\"no_routes\">定位中...</p>\n        </div>\n      )}\n    </div>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport { useLocation, useParams } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { LogoZh } from \"../components/Logo\";\nimport BackButton from \"../components/BackButton\";\nimport fetchTdxApi from \"../utils/fetchTdxApi\";\n\nfunction PossibleRouteItem({ possibleRouteInfo }) {\n  const { routeName, routeUID, destinationName, city } = possibleRouteInfo;\n  return (\n    <Link to={`${city}/${routeUID}`} className=\"route\">\n      <span className=\"route_name\">{routeName}</span>\n      <span className=\"route_fromTo\">\n        <span>往&nbsp;</span>\n        {destinationName}\n      </span>\n    </Link>\n  );\n}\n\nfunction PossibleRouteList({ possibleRoutes }) {\n  const routesList = possibleRoutes.map((possibleRouteInfo) => (\n    <PossibleRouteItem\n      possibleRouteInfo={possibleRouteInfo}\n      key={possibleRouteInfo.routeUID}\n    />\n  ));\n  return (\n    <div className=\"routes\">\n      <div className=\"routes_list\">{routesList.length ? routesList : null}</div>\n    </div>\n  );\n}\n\nexport default function RoutesByStationPage(props) {\n  const { StationName } = useParams();\n  const { state = {} } = useLocation();\n  const [possibleRoutes, setPossibleRoutes] = useState([]);\n\n  useEffect(() => {\n    async function getRoutesDestinations() {\n      const nearbyRouteUrl = `https://ptx.transportdata.tw/MOTC/v2/Bus/Route/NearBy?$spatialFilter=nearby(${state.userLocation[0]},${state.userLocation[1]},500)&$format=JSON`;\n      const nearbyRouteRaw = await fetchTdxApi(nearbyRouteUrl);\n      const nearbyRoutesWithDestinations = state.possibleRoutes\n        .map((possibleRoute) => {\n          const nearbyRoute = nearbyRouteRaw.find(\n            (route) => route.RouteUID === possibleRoute.routeUID\n          );\n          const { DestinationStopNameZh = \"\", City = \"\" } = nearbyRoute;\n          return {\n            ...possibleRoute,\n            destinationName: DestinationStopNameZh,\n            city: City,\n          };\n        })\n        .filter(\n          (route, index, originalArray) =>\n            index ===\n            originalArray.findIndex(\n              (routeDuplicate) => route.routeUID === routeDuplicate.routeUID\n            )\n        );\n      setPossibleRoutes(nearbyRoutesWithDestinations);\n    }\n    getRoutesDestinations();\n  }, []);\n\n  return (\n    <div className=\"nearby_bus_page\">\n      <div className=\"top_nav\">\n        <BackButton />\n        <LogoZh />\n        <span className=\"nearby\">{StationName}</span>\n      </div>\n      <PossibleRouteList possibleRoutes={possibleRoutes} />\n    </div>\n  );\n}\n","import Homepage from \"./pages/Homepage\";\nimport SearchBusPage from \"./pages/SearchBusPage\";\nimport BusStatusPage from \"./pages/BusStatusPage\";\nimport NearbyBusPage from \"./pages/NearbyBusPage\";\nimport RoutesByStationPage from \"./pages/RoutesByStationPage\";\nimport { Routes, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport { useState } from \"react\";\n\nfunction App() {\n  const [userLocation, setUserLocation] = useState([]);\n\n  return (\n    <div className=\"App\">\n      <Routes>\n        <Route path=\"/taiwan-bus\" element={<Homepage />} />\n        <Route\n          path=\"/taiwan-bus/nearby-bus\"\n          element={\n            <NearbyBusPage\n              userLocation={userLocation}\n              setUserLocation={setUserLocation}\n            />\n          }\n        />\n        <Route\n          path=\"/taiwan-bus/nearby-bus/:StationName\"\n          element={<RoutesByStationPage />}\n        />\n        <Route\n          path=\"/taiwan-bus/nearby-bus/:station/:city/:RouteUID\"\n          element={<BusStatusPage />}\n        />\n        <Route path=\"/taiwan-bus/search-bus\" element={<SearchBusPage />} />\n        <Route\n          path=\"/taiwan-bus/search-bus/:city/:RouteUID\"\n          element={<BusStatusPage />}\n        />\n        <Route path=\"/taiwan-bus/search-train\" element={<Homepage />} />\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}